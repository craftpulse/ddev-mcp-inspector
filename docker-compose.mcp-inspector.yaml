#ddev-generated
services:
  mcp-inspector:
    container_name: ddev-${DDEV_SITENAME}-mcp-inspector
    image: node:24-alpine
    restart: "no"
    labels:
      com.ddev.site-name: ${DDEV_SITENAME}
      com.ddev.platform: ddev
      com.ddev.app-type: ${DDEV_PROJECT_TYPE}
      com.ddev.approot: ${DDEV_APPROOT}
    environment:
      CLIENT_PORT: "6274"
      SERVER_PORT: "6277"
      DANGEROUSLY_OMIT_AUTH: "true"
      HOST: "0.0.0.0"
      ALLOWED_ORIGINS: "*"
      VIRTUAL_HOST: ${DDEV_HOSTNAME}
      HTTP_EXPOSE: "6274:6274,6277:6277"
      HTTPS_EXPOSE: "6275:6274,6277:6278"
    expose:
      - "6274"
      - "6277"
    volumes:
      - ".:/mnt/ddev_config:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    working_dir: /app
    command: >
      sh -c "
        echo '=== MCP Inspector Starting ===' &&
        echo 'Node version:' && node --version &&
        echo 'Installing git for npm dependencies...' &&
        apk add --no-cache git &&
        echo 'Installing MCP Inspector...' &&
        npm install -g @modelcontextprotocol/inspector@latest &&
        echo 'Environment variables:' &&
        echo CLIENT_PORT=$$CLIENT_PORT &&
        echo SERVER_PORT=$$SERVER_PORT &&
        echo HOST=$$HOST &&
        echo DANGEROUSLY_OMIT_AUTH=$$DANGEROUSLY_OMIT_AUTH &&
        echo ALLOWED_ORIGINS=$$ALLOWED_ORIGINS &&
        echo 'Starting MCP Inspector...' &&
        exec npx @modelcontextprotocol/inspector
      "
    healthcheck:
      disable: true
    networks:
      - default
      - ddev_default

networks:
  ddev_default:
    external: true